import osfrom src.projectDefault.logging import loggerfrom sklearn.model_selection import train_test_splitimport pandas as pdfrom src.projectDefault.entity.config_entity import DataTransformationConfigclass DataTransformation:    def __init__(self, config: DataTransformationConfig):        self.config = config        ## Note: You can add different data transformation techniques such as Scalas, PCA, etc.        ## You can perform different EDA in ML cycle here before passing this data to the model        ## I am only adding train_test_split step because this data is already cleaned up,    def train_test_splitting(self):        data = pd.read_csv(self.config.data_path)        # split the data into train and test datasets (0.75, 0.25 split)        train, test = train_test_split(data)        train.to_csv(os.path.join(self.config.root_dir, "train.csv"), index=False)        test.to_csv(os.path.join(self.config.root_dir, "test.csv"), index=False)        logger.info("Split the data into training and test sets")        logger.info(train.shape)        logger.info(test.shape)        print(train.shape)        print(test.shape)    